From a9a50c5c7a0acca3aae483027bf9f529b4b72a06 Mon Sep 17 00:00:00 2001
From: alejandroFili <a.filimon@alumnos.upm.es>
Date: Mon, 16 Oct 2023 18:42:21 +0200
Subject: [PATCH 2/3] Assignment 4 Alexandru Filimon

---
 Assignment4/alejandroFili - 22C012/task06.py | 36 +++++++-
 Assignment4/alejandroFili - 22C012/task07.py | 95 ++++++++++++++++++--
 Assignment4/alejandroFili - 22C012/task08.py | 34 +++++++
 Assignment4/alejandroFili - 22C012/task09.py | 33 +++++++
 4 files changed, 190 insertions(+), 8 deletions(-)
 create mode 100644 Assignment4/alejandroFili - 22C012/task08.py
 create mode 100644 Assignment4/alejandroFili - 22C012/task09.py

diff --git a/Assignment4/alejandroFili - 22C012/task06.py b/Assignment4/alejandroFili - 22C012/task06.py
index da7ab41..ff799fc 100644
--- a/Assignment4/alejandroFili - 22C012/task06.py	
+++ b/Assignment4/alejandroFili - 22C012/task06.py	
@@ -9,7 +9,7 @@ Original file is located at
 **Task 06: Modifying RDF(s)**
 """
 
-!pip install rdflib
+# !pip install rdflib
 github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"
 
 """Read the RDF file as shown in class"""
@@ -33,35 +33,65 @@ for s, p, o in g:
 """
 
 # TO DO
+g.add((ns.University, RDF.type, RDFS.Class))
+
 # Visualize the results
+print("6.1")
 for s, p, o in g:
   print(s,p,o)
 
 """**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""
 
 # TO DO
+g.add((ns.Researcher, RDFS.subClassOf, ns.Person))
+
 # Visualize the results
+print("6.2")
 for s, p, o in g:
   print(s,p,o)
 
 """**TASK 6.3: Create a new individual of Researcher named "Jane Smith"**"""
 
 # TO DO
+
+g.add((ns.JaneSmith, RDF.type, ns.Researcher))
+
 # Visualize the results
+print("6.3")
 for s, p, o in g:
   print(s,p,o)
 
 """**TASK 6.4: Add to the individual JaneSmith the email address, fullName, given and family names**"""
 
 # TO DO
+VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
+g.add((ns.JaneSmith, VCARD.EMAIL, Literal("j.smith@example.org")))
+g.add((ns.JaneSmith, VCARD.FN, Literal("Jane Smith")))
+g.add((ns.JaneSmith, VCARD["given-name"] , Literal("Jane")))
+g.add((ns.JaneSmith, VCARD["family-name"], Literal("Smith")))
 # Visualize the results
 
+print("6.4")
+for s,p,o in g.triples((ns.JaneSmith, None, None)):
+  print(s, p, o)
+
 """**TASK 6.5: Add UPM as the university where John Smith works**"""
 
 # TO DO
-# Visualize the results
+g.add((ns.UPM, RDF.type, ns.University))
+g.add((ns.UPM, VCARD.FN, Literal("UPM")))
+g.add((ns.JohnSmith, ns.worksAt, ns.UPM))
+
+print("6.5")
+for s,p,o in g.triples((ns.JohnSmith, None, None)):
+  print(s, p, o)
 
 """**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary**"""
 
 # TO DO
-# Visualize the results
\ No newline at end of file
+from rdflib import FOAF
+g.add((ns.JohnSmith, FOAF.knows, ns.JaneSmith))
+# Visualize the results
+print("6.6")
+for s,p,o in g.triples((ns.JohnSmith, FOAF.knows, None)):
+  print(s, p, o)
\ No newline at end of file
diff --git a/Assignment4/alejandroFili - 22C012/task07.py b/Assignment4/alejandroFili - 22C012/task07.py
index 24f7252..0974ac0 100644
--- a/Assignment4/alejandroFili - 22C012/task07.py	
+++ b/Assignment4/alejandroFili - 22C012/task07.py	
@@ -9,7 +9,7 @@ Original file is located at
 **Task 07: Querying RDF(s)**
 """
 
-!pip install rdflib
+# !pip install rdflib
 github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"
 
 """First let's read the RDF file"""
@@ -21,34 +21,119 @@ g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
 g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
 g.parse(github_storage+"/rdf/example6.rdf", format="xml")
 
+ns = Namespace("http://somewhere#")
+
 """**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""
 
 # TO DO
+from rdflib.plugins.sparql import prepareQuery
+
+livingThing_query = prepareQuery('''
+SELECT ?subClase
+WHERE {
+    ?subClase rdfs:subClassOf ns:LivingThing
+}                      
+''',
+initNs = { "rdfs": RDFS, "ns": ns}
+)
 # Visualize the results
-
-#for r in g.query(q1):
-#  print(r)
+print("7.1")
+for r in g.query(livingThing_query):
+  print(r.subClase)
 
 """**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**
 
 """
 
 # TO DO
+# from rdflib.plugins.sparql import prepareQuery
+
+person_query = prepareQuery('''
+SELECT ?person
+WHERE {
+    ?person rdf:type ns:Person
+}                      
+''',
+initNs = { "rdf": RDF, "rdfs": RDFS, "ns": ns}
+)
 # Visualize the results
+print("7.2")
+for r in g.query(person_query):
+  print(r.person)
 
 """**TASK 7.3: List all individuals of "Person" or "Animal" and all their properties including their class with RDFLib and SPARQL. You do not need to list the individuals of the subclasses of person**
 
 """
 
 # TO DO
+# from rdflib.plugins.sparql import prepareQuery
+
+query_3 = prepareQuery('''
+SELECT ?subject ?predicate ?object
+WHERE {
+     ?subject ?predicate ?object .
+     ?subject rdf:type ?type .
+FILTER (
+     ?type = ns:Animal || ?type = ns:Person
+)
+}
+''',
+initNs = { "rdf": RDF, "rdfs": RDFS, "ns": ns}
+)
+
 # Visualize the results
+print("7.3")
+for r in g.query(query_3):
+  print(r.subject, r.predicate, r.object)
 
 """**TASK 7.4:  List the name of the persons who know Rocky**"""
 
 # TO DO
+# from rdflib.plugins.sparql import prepareQuery
+from rdflib import FOAF
+VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0")
+
+query_4 = prepareQuery('''
+SELECT ?Rocky_URI  ?amigo_URI ?amigo_name
+WHERE {
+     ?Rocky_URI <http://www.w3.org/2001/vcard-rdf/3.0/Given>  ?given_name . 
+     ?amigo_URI foaf:knows ?Rocky_URI .
+     ?amigo_URI <http://www.w3.org/2001/vcard-rdf/3.0/Given>  ?amigo_name . 
+                                   
+
+     FILTER(?given_name = "Rocky")
+}
+''',
+initNs = { "foaf": FOAF , "ns" : ns, "vcard": VCARD}
+)
+
 # Visualize the results
+print("7.4")
+for r in g.query(query_4):
+     print(r.amigo_name)
 
 """**Task 7.5: List the entities who know at least two other entities in the graph**"""
 
 # TO DO
-# Visualize the results
\ No newline at end of file
+
+# from rdflib.plugins.sparql import prepareQuery
+# from rdflib import FOAF
+VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0")
+
+query_5 = prepareQuery('''
+SELECT ?entity ?relatedEntity
+WHERE {
+      ?entity foaf:knows ?relatedEntity .
+
+}
+GROUP BY ?entity 
+HAVING (COUNT(DISTINCT ?relatedEntity) >= 2)
+    
+''',
+initNs = { "foaf": FOAF , "ns" : ns, "vcard": VCARD}
+)
+
+# Visualize the results
+print("7.5")
+for r in g.query(query_5):
+     print(r.entity)
\ No newline at end of file
diff --git a/Assignment4/alejandroFili - 22C012/task08.py b/Assignment4/alejandroFili - 22C012/task08.py
new file mode 100644
index 0000000..1918d37
--- /dev/null
+++ b/Assignment4/alejandroFili - 22C012/task08.py	
@@ -0,0 +1,34 @@
+# -*- coding: utf-8 -*-
+"""Task08.ipynb
+
+Automatically generated by Colaboratory.
+
+Original file is located at
+    https://colab.research.google.com/drive/18P0xTS31q1P7nR4efg0Yy3QrClOxqMAe
+
+**Task 08: Completing missing data**
+"""
+
+# !pip install rdflib
+github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"
+
+from rdflib import Graph, Namespace, Literal, URIRef
+g1 = Graph()
+g2 = Graph()
+g1.parse(github_storage+"resources/data01.rdf", format="xml")
+g2.parse(github_storage+"resources/data02.rdf", format="xml")
+
+"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""
+
+from rdflib.namespace import RDF, RDFS
+ns =Namespace("http://data.org#")
+
+for s1,p1,o1 in g1.triples((None,None,ns.Person)):
+    for s2,p2,o2 in g2.triples((s1,None,None)):
+        if(p2 != RDF.type):
+            g1.add((s2,p2,o2))  
+
+  
+print("final g1")
+for s1,p1,o1 in g1:
+    print(s1,p1,o1)
\ No newline at end of file
diff --git a/Assignment4/alejandroFili - 22C012/task09.py b/Assignment4/alejandroFili - 22C012/task09.py
new file mode 100644
index 0000000..4f8037a
--- /dev/null
+++ b/Assignment4/alejandroFili - 22C012/task09.py	
@@ -0,0 +1,33 @@
+# -*- coding: utf-8 -*-
+"""Task09.ipynb
+
+Automatically generated by Colaboratory.
+
+Original file is located at
+    https://colab.research.google.com/drive/1aA_7cDJnS46kKnLS5uuCGN5_s3QANqk-
+
+**Task 09: Data linking**
+"""
+
+# !pip install rdflib
+github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"
+
+from rdflib import Graph, Namespace, Literal, URIRef
+g1 = Graph()
+g2 = Graph()
+g3 = Graph()
+g1.parse(github_storage+"resources/data03.rdf", format="xml")
+g2.parse(github_storage+"resources/data04.rdf", format="xml")
+
+"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""
+
+from rdflib.namespace import OWL
+VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
+
+for s1,p1,o1 in g1.triples((None,VCARD.FN,None)):
+    for s2,p2,o2 in g2.triples((None,VCARD.FN,o1)):
+        g3.add((s1, OWL.sameAs, s2))
+
+print("final g3")
+for s3,p3,o3 in g3:
+    print(s3,p3,o3)
\ No newline at end of file
-- 
2.30.0.windows.1

